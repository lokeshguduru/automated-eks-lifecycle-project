name: Deploy EKS, LBC, Application, and then Destroy

on:
  push:
    branches:
      - main
    paths:
      - 'terraform/**'
      - 'k8s-manifests/**'

jobs:
  # Job 1: Deploy the EKS infrastructure and LBC role
  terraform-deploy:
    name: '1. Terraform Deploy EKS Cluster'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./terraform
    outputs:
      cluster_name: ${{ steps.eks.outputs.cluster_name }}
      region: ${{ steps.eks.outputs.region }}
      vpc_id: ${{ steps.eks.outputs.vpc_id }}
      lbc_iam_role_arn: ${{ steps.eks.outputs.lbc_iam_role_arn }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

      - name: Get Terraform Outputs
        id: eks
        run: |
          echo "cluster_name=$(terraform output -raw cluster_name)" >> $GITHUB_OUTPUT
          echo "region=$(terraform output -raw region)" >> $GITHUB_OUTPUT
          echo "vpc_id=$(terraform output -raw vpc_id)" >> $GITHUB_OUTPUT
          echo "lbc_iam_role_arn=$(terraform output -raw lbc_iam_role_arn)" >> $GITHUB_OUTPUT

  # Job 2: Deploy the LBC and the 3-Tier Application
  deploy-application:
    name: '2. Deploy LBC & Application'
    runs-on: ubuntu-latest
    needs: terraform-deploy

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ needs.terraform-deploy.outputs.region }}

      - name: Configure Kubectl
        run: aws eks --region ${{ needs.terraform-deploy.outputs.region }} update-kubeconfig --name ${{ needs.terraform-deploy.outputs.cluster_name }}

      - name: Setup Helm
        uses: azure/setup-helm@v4

      - name: Install AWS Load Balancer Controller with Helm
        run: |
          helm repo add eks https://aws.github.io/eks-charts
          helm repo update eks
          helm install aws-load-balancer-controller eks/aws-load-balancer-controller \
            -n kube-system \
            --set clusterName=${{ needs.terraform-deploy.outputs.cluster_name }} \
            --set serviceAccount.create=true \
            --set serviceAccount.name=aws-load-balancer-controller \
            --set serviceAccount.annotations."eks\.amazonaws\.com/role-arn"=${{ needs.terraform-deploy.outputs.lbc_iam_role_arn }} \
            --set region=${{ needs.terraform-deploy.outputs.region }} \
            --set vpcId=${{ needs.terraform-deploy.outputs.vpc_id }}

      - name: Deploy Application Manifests
        run: kubectl apply -f k8s-manifests/

      - name: Wait for deployments and Ingress
        run: |
          echo "Waiting for deployments to roll out..."
          kubectl wait --for=condition=available --timeout=5m deployment/frontend-deployment
          kubectl wait --for=condition=available --timeout=5m deployment/backend-api-deployment
          echo "Waiting for Load Balancer to be provisioned by Ingress..."
          kubectl wait --for=jsonpath='{.status.loadBalancer.ingress}' --timeout=5m ingress/main-ingress

  # Job 3: Wait for verification and then destroy everything
  wait-and-destroy:
    name: '3. Wait and Destroy'
    runs-on: ubuntu-latest
    needs: deploy-application

    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Wait for Verification Window
        run: |
          echo "Infrastructure, LBC, and Application are live. Waiting for 10 minutes for verification."
          echo "The Load Balancer URL will be available shortly. Run 'kubectl get ingress main-ingress' locally to find it."
          sleep 600

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ needs.terraform-deploy.outputs.region }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        run: terraform init

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -input=false